version: "3.6"

services:
  nginx:
    command: ["nginx", "-c", "/nginx_conf/nginx.conf", "-g", "daemon off;"]
    image: nginx:1.17.8-alpine
    networks:
      - elastic
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./nginx.conf:/nginx_conf/nginx.conf
      - ./secrets:/var/www/secrets
      - ../frontend:/var/www/html

  # iiif:
  #   image: lorisimageserver/loris
  #   networks:
  #     - elastic
  #   ports:
  #     - 5004:5004
  #   restart: always
  #   volumes:
  #     - /data/facsimiles:/opt/loris/tests/img

  api:
    build:
      context: ../../
      dockerfile: ./packages/api/Dockerfile
    command: ["npx", "nodemon", "./packages/api", "-w", "./packages/api/build/api", "-w", "./packages/api/build.puppenv.utils/bundle.js"]
    env_file:
      - ../../.env.dev
    networks:
      - elastic
    ports:
      - "3000:3000"
    restart: always
    volumes:
      - ../../:/app
    working_dir: /app

  db:
    container_name: docere_db
    environment:
      - POSTGRES_PASSWORD=docker
      - POSTGRES_USER=docker
      - POSTGRES_HOST=db
    image: postgis/postgis:12-3.0-alpine
    networks:
      - elastic
    ports:
      - 5432:5432
    volumes:
      - docere_db:/var/lib/postgresql/data

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
    restart: always
    ports:
      - 9200:9200
    volumes:
      - docere_es_dev:/usr/share/elasticsearch/data

volumes:
  docere_db:
    driver: local
  docere_es_dev:
    driver: local

networks:
  elastic:
    driver: bridge

